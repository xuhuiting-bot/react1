{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles.css'; // 引入对应的样式文件，假设样式就放在styles.css里，根据实际情况调整路径\n\n// 五子棋单个格子组件（Square）\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Square = /*#__PURE__*/React.memo(_c = function Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n});\n\n// 五子棋棋盘组件（Board）\n_c2 = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n\n    // 获取对应的DOM元素，添加active类触发动画（简单示例，可优化获取方式）\n    const squareDOM = document.querySelector(`.square[data-index=\"${i}\"]`);\n    if (squareDOM) {\n      squareDOM.classList.add('active');\n      setTimeout(() => {\n        squareDOM.classList.remove('active');\n      }, 300);\n    }\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = winner === 'X' ? '黑子获胜' : '白子获胜';\n  } else {\n    status = xIsNext ? '轮到黑子落子' : '轮到白子落子';\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), Array.from({\n      length: 15\n    }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: Array.from({\n        length: 15\n      }).map((_, colIndex) => {\n        const index = rowIndex * 15 + colIndex;\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[index],\n          onSquareClick: () => handleClick(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n}\n\n// 游戏主组件（Game）\n_c3 = Board;\nfunction Game() {\n  _s();\n  const [history, setHistory] = useState([Array(225).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = '跳到第' + move + '步';\n    } else {\n      description = '回到游戏开始';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n}\n\n// 判断五子棋胜利的函数（calculateWinner）\n_s(Game, \"ZVnBbFpY40QFsJgQhoJetEB8Org=\");\n_c4 = Game;\nfunction calculateWinner(squares) {\n  const boardSize = 15;\n  // 判断水平方向\n  for (let row = 0; row < boardSize; row++) {\n    for (let col = 0; col <= boardSize - 5; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断垂直方向\n  for (let col = 0; col < boardSize; col++) {\n    for (let row = 0; row <= boardSize - 5; row++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i * boardSize]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i * boardSize]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断正斜向（从左上角到右下角）\n  for (let row = 0; row <= boardSize - 5; row++) {\n    for (let col = 0; col <= boardSize - 5; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i * (boardSize + 1)]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i * (boardSize + 1)]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断反斜向（从右上角到左下角）\n  for (let row = 0; row <= boardSize - 5; row++) {\n    for (let col = 4; col < boardSize; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex - i * (boardSize - 1)]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex - i * (boardSize - 1)]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  return null;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 174,\n  columnNumber: 5\n}, this));\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Square$React.memo\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"Game\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","memo","_c","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Board","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","squareDOM","document","querySelector","classList","add","setTimeout","remove","winner","status","Array","from","length","map","_","rowIndex","colIndex","index","_c3","Game","_s","history","setHistory","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","moves","move","description","_c4","boardSize","row","col","startIndex","root","createRoot","getElementById","render","StrictMode","$RefreshReg$"],"sources":["D:/桌面/react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles.css'; // 引入对应的样式文件，假设样式就放在styles.css里，根据实际情况调整路径\n\n// 五子棋单个格子组件（Square）\nconst Square = React.memo(function Square({ value, onSquareClick }) {\n  return (\n      <button className=\"square\" onClick={onSquareClick}>\n        {value}\n      </button>\n  );\n});\n\n// 五子棋棋盘组件（Board）\nfunction Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n\n    // 获取对应的DOM元素，添加active类触发动画（简单示例，可优化获取方式）\n    const squareDOM = document.querySelector(`.square[data-index=\"${i}\"]`);\n    if (squareDOM) {\n      squareDOM.classList.add('active');\n      setTimeout(() => {\n        squareDOM.classList.remove('active');\n      }, 300);\n    }\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = winner === 'X'? '黑子获胜' : '白子获胜';\n  } else {\n    status = xIsNext? '轮到黑子落子' : '轮到白子落子';\n  }\n\n  return (\n      <>\n        <div className=\"status\">{status}</div>\n        {Array.from({ length: 15 }).map((_, rowIndex) => (\n            <div key={rowIndex} className=\"board-row\">\n              {Array.from({ length: 15 }).map((_, colIndex) => {\n                const index = rowIndex * 15 + colIndex;\n                return (\n                    <Square\n                        key={index}\n                        value={squares[index]}\n                        onSquareClick={() => handleClick(index)}\n                    />\n                );\n              })}\n            </div>\n        ))}\n      </>\n  );\n}\n\n// 游戏主组件（Game）\nfunction Game() {\n  const [history, setHistory] = useState([Array(225).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = '跳到第' + move + '步';\n    } else {\n      description = '回到游戏开始';\n    }\n    return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        </li>\n    );\n  });\n\n  return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n        </div>\n        <div className=\"game-info\">\n          <ol>{moves}</ol>\n        </div>\n      </div>\n  );\n}\n\n// 判断五子棋胜利的函数（calculateWinner）\nfunction calculateWinner(squares) {\n  const boardSize = 15;\n  // 判断水平方向\n  for (let row = 0; row < boardSize; row++) {\n    for (let col = 0; col <= boardSize - 5; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断垂直方向\n  for (let col = 0; col < boardSize; col++) {\n    for (let row = 0; row <= boardSize - 5; row++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i * boardSize]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i * boardSize]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断正斜向（从左上角到右下角）\n  for (let row = 0; row <= boardSize - 5; row++) {\n    for (let col = 0; col <= boardSize - 5; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i * (boardSize + 1)]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i * (boardSize + 1)]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断反斜向（从右上角到左下角）\n  for (let row = 0; row <= boardSize - 5; row++) {\n    for (let col = 4; col < boardSize; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex - i * (boardSize - 1)]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex - i * (boardSize - 1)]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  return null;\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n      <Game />\n    </React.StrictMode>\n);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}