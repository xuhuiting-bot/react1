{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport ReactTooltip from 'react-tooltip'; // 引入提示框组件库\nimport './styles.css';\n\n// 五子棋单个格子组件（Square），使用React.memo优化\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Square = /*#__PURE__*/React.memo(_c = function Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    \"data-tip\": \"\\u5728\\u6B64\\u5904\\u843D\\u5B50\\u54E6\",\n    \"data-for\": \"square-tip\",\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n});\n\n// 五子棋棋盘组件（Board），使用React.memo优化，避免不必要渲染\n_c2 = Square;\nconst Board = /*#__PURE__*/React.memo(_c3 = function Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    const winner = calculateWinner(squares); // 判断当前是否已有胜者\n    if (winner || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    const updatedStats = {\n      ...winStats\n    }; // 获取当前胜负统计状态副本\n    if (winner === 'X') {\n      updatedStats.black++; // 如果黑子获胜，黑子胜场数加1\n    } else {\n      updatedStats.white++; // 如果白子获胜，白子胜场数加1\n    }\n    setWinStats(updatedStats); // 更新胜负统计状态\n    status = winner === 'X' ? '黑子获胜' : '白子获胜';\n  } else {\n    status = xIsNext ? '轮到黑子落子' : '轮到白子落子';\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), Array.from({\n      length: 15\n    }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: Array.from({\n        length: 15\n      }).map((_, colIndex) => {\n        const index = rowIndex * 15 + colIndex;\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[index],\n          onSquareClick: () => handleClick(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n});\n\n// 自定义Hook用于管理游戏核心状态和相关逻辑\n_c4 = Board;\nfunction useGameState() {\n  _s();\n  const [history, setHistory] = useState([Array(225).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [winStats, setWinStats] = useState({\n    black: 0,\n    white: 0\n  });\n\n  // 处理落子后更新历史记录和当前步数等状态\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  // 认输功能函数，更新胜负统计并重置游戏状态\n  function giveUp() {\n    const winner = xIsNext ? 'O' : 'X';\n    const updatedStats = {\n      ...winStats\n    };\n    if (winner === 'X') {\n      updatedStats.black++;\n    } else {\n      updatedStats.white++;\n    }\n    setWinStats(updatedStats);\n    alert(`${winner} 方获胜，因为对方认输了！`);\n    setHistory([Array(225).fill(null)]);\n    setCurrentMove(0);\n  }\n  return {\n    xIsNext,\n    currentSquares,\n    handlePlay,\n    jumpTo,\n    history,\n    currentMove,\n    winStats,\n    giveUp\n  };\n}\n\n// 游戏主组件（Game），使用自定义Hook管理状态，代码更简洁\n_s(useGameState, \"HaxYNo/LRbOCRjMYZFwHXWixnhA=\");\nexport default function Game() {\n  _s2();\n  const {\n    xIsNext,\n    currentSquares,\n    handlePlay,\n    jumpTo,\n    history,\n    currentMove,\n    winStats,\n    giveUp\n  } = useGameState();\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = '跳到第' + move + '步';\n    } else {\n      description = '回到游戏开始';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-turn-indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${xIsNext ? 'black-turn' : 'white-turn'}`,\n        children: xIsNext ? '黑子落子中' : '白子落子中'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: giveUp,\n        title: \"\\u4E3B\\u52A8\\u8BA4\\u8F93\\uFF0C\\u7ED3\\u675F\\u5F53\\u524D\\u68CB\\u5C40\",\n        children: \"\\u8BA4\\u8F93\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlay,\n        title: \"\\u91CD\\u65B0\\u5F00\\u59CB\\u6E38\\u620F\\uFF0C\\u6E05\\u7A7A\\u5F53\\u524D\\u68CB\\u5C40\",\n        children: \"\\u91CD\\u65B0\\u5F00\\u59CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: jumpTo,\n        title: \"\\u64A4\\u9500\\u4E0A\\u4E00\\u6B65\\u843D\\u5B50\\u64CD\\u4F5C\",\n        children: \"\\u6094\\u68CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u9ED1\\u5B50\\u80DC\\u573A: \", winStats.black, \"\\uFF0C\\u767D\\u5B50\\u80DC\\u573A: \", winStats.white]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 7\n  }, this);\n}\n\n// 判断五子棋胜利的函数（calculateWinner）\n_s2(Game, \"cV4KI++ct2SPcT2c/Ac0quQCsFA=\", false, function () {\n  return [useGameState];\n});\n_c5 = Game;\nfunction calculateWinner(squares) {\n  const boardSize = 15;\n  // 判断水平方向\n  for (let row = 0; row < boardSize; row++) {\n    for (let col = 0; col <= boardSize - 5; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断垂直方向\n  for (let col = 0; col < boardSize; col++) {\n    for (let row = 0; row <= boardSize - 5; row++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i * boardSize]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i * boardSize]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断正斜向（从左上角到右下角）\n  for (let row = 0; row <= boardSize - 5; row++) {\n    for (let col = 0; col <= boardSize - 5; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i * (boardSize + 1)]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i * (boardSize + 1)]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断反斜向（从右上角到左下角）\n  for (let row = 0; row <= boardSize - 5; row++) {\n    for (let col = 4; col < boardSize; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex - i * (boardSize - 1)]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex - i * (boardSize - 1)]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  return null;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 226,\n  columnNumber: 5\n}, this));\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Square$React.memo\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board$React.memo\");\n$RefreshReg$(_c4, \"Board\");\n$RefreshReg$(_c5, \"Game\");","map":{"version":3,"names":["React","useState","ReactDOM","ReactTooltip","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","memo","_c","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Board","_c3","xIsNext","squares","onPlay","handleClick","i","winner","calculateWinner","nextSquares","slice","status","updatedStats","winStats","black","white","setWinStats","Array","from","length","map","_","rowIndex","colIndex","index","_c4","useGameState","_s","history","setHistory","fill","currentMove","setCurrentMove","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","giveUp","alert","Game","_s2","moves","move","description","title","_c5","boardSize","row","col","startIndex","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["D:/桌面/react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from'react-dom/client';\nimport ReactTooltip from'react-tooltip'; // 引入提示框组件库\nimport './styles.css';\n\n// 五子棋单个格子组件（Square），使用React.memo优化\nconst Square = React.memo(function Square({ value, onSquareClick }) {\n  return (\n      <button className=\"square\" onClick={onSquareClick} data-tip=\"在此处落子哦\" data-for=\"square-tip\">\n        {value}\n      </button>\n  );\n});\n\n// 五子棋棋盘组件（Board），使用React.memo优化，避免不必要渲染\nconst Board = React.memo(function Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    const winner = calculateWinner(squares); // 判断当前是否已有胜者\n    if (winner || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    const updatedStats = {...winStats }; // 获取当前胜负统计状态副本\n    if (winner === 'X') {\n      updatedStats.black++; // 如果黑子获胜，黑子胜场数加1\n    } else {\n      updatedStats.white++; // 如果白子获胜，白子胜场数加1\n    }\n    setWinStats(updatedStats); // 更新胜负统计状态\n    status = winner === 'X'? '黑子获胜' : '白子获胜';\n  } else {\n    status = xIsNext? '轮到黑子落子' : '轮到白子落子';\n  }\n\n  return (\n      <>\n        <div className=\"status\">{status}</div>\n        {Array.from({ length: 15 }).map((_, rowIndex) => (\n            <div key={rowIndex} className=\"board-row\">\n              {Array.from({ length: 15 }).map((_, colIndex) => {\n                const index = rowIndex * 15 + colIndex;\n                return (\n                    <Square\n                        key={index}\n                        value={squares[index]}\n                        onSquareClick={() => handleClick(index)}\n                    />\n                );\n              })}\n            </div>\n        ))}\n      </>\n  );\n});\n\n// 自定义Hook用于管理游戏核心状态和相关逻辑\nfunction useGameState() {\n  const [history, setHistory] = useState([Array(225).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [winStats, setWinStats] = useState({\n    black: 0,\n    white: 0\n  });\n\n  // 处理落子后更新历史记录和当前步数等状态\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  // 认输功能函数，更新胜负统计并重置游戏状态\n  function giveUp() {\n    const winner = xIsNext? 'O' : 'X';\n    const updatedStats = {...winStats };\n    if (winner === 'X') {\n      updatedStats.black++;\n    } else {\n      updatedStats.white++;\n    }\n    setWinStats(updatedStats);\n    alert(`${winner} 方获胜，因为对方认输了！`);\n    setHistory([Array(225).fill(null)]);\n    setCurrentMove(0);\n  }\n\n  return {\n    xIsNext,\n    currentSquares,\n    handlePlay,\n    jumpTo,\n    history,\n    currentMove,\n    winStats,\n    giveUp\n  };\n}\n\n// 游戏主组件（Game），使用自定义Hook管理状态，代码更简洁\nexport default function Game() {\n  const {\n    xIsNext,\n    currentSquares,\n    handlePlay,\n    jumpTo,\n    history,\n    currentMove,\n    winStats,\n    giveUp\n  } = useGameState();\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = '跳到第' + move + '步';\n    } else {\n      description = '回到游戏开始';\n    }\n    return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        </li>\n    );\n  });\n\n  return (\n      <div className=\"game\">\n        <div className=\"current-turn-indicator\">\n          <span className={`${xIsNext? 'black-turn' : 'white-turn'}`}>{xIsNext? '黑子落子中' : '白子落子中'}</span>\n        </div>\n        <div className=\"game-board\">\n          <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n        </div>\n        <div className=\"game-info\">\n          <button onClick={giveUp} title=\"主动认输，结束当前棋局\">认输</button>\n          <button onClick={handlePlay} title=\"重新开始游戏，清空当前棋局\">重新开始</button>\n          <button onClick={jumpTo} title=\"撤销上一步落子操作\">悔棋</button>\n          <ol>{moves}</ol>\n          <div>黑子胜场: {winStats.black}，白子胜场: {winStats.white}</div>\n        </div>\n      </div>\n  );\n}\n\n// 判断五子棋胜利的函数（calculateWinner）\nfunction calculateWinner(squares) {\n  const boardSize = 15;\n  // 判断水平方向\n  for (let row = 0; row < boardSize; row++) {\n    for (let col = 0; col <= boardSize - 5; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断垂直方向\n  for (let col = 0; col < boardSize; col++) {\n    for (let row = 0; row <= boardSize - 5; row++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i * boardSize]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i * boardSize]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断正斜向（从左上角到右下角）\n  for (let row = 0; row <= boardSize - 5; row++) {\n    for (let col = 0; col <= boardSize - 5; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex + i * (boardSize + 1)]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex + i * (boardSize + 1)]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  // 判断反斜向（从右上角到左下角）\n  for (let row = 0; row <= boardSize - 5; row++) {\n    for (let col = 4; col < boardSize; col++) {\n      const startIndex = row * boardSize + col;\n      for (let i = 0; i < 5; i++) {\n        if (!squares[startIndex - i * (boardSize - 1)]) {\n          break;\n        }\n        if (i === 4 && squares[startIndex] === squares[startIndex - i * (boardSize - 1)]) {\n          return squares[startIndex];\n        }\n      }\n    }\n  }\n  return null;\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n      <ReactTooltip />\n      <Game />\n    </React.StrictMode>\n);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAK,kBAAkB;AACtC,OAAOC,YAAY,MAAK,eAAe,CAAC,CAAC;AACzC,OAAO,cAAc;;AAErB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,MAAM,gBAAGR,KAAK,CAACS,IAAI,CAAAC,EAAA,GAAC,SAASF,MAAMA,CAAC;EAAEG,KAAK;EAAEC;AAAc,CAAC,EAAE;EAClE,oBACIP,OAAA;IAAQQ,SAAS,EAAC,QAAQ;IAACC,OAAO,EAAEF,aAAc;IAAC,YAAS,sCAAQ;IAAC,YAAS,YAAY;IAAAG,QAAA,EACvFJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC,CAAC;;AAEF;AAAAC,GAAA,GARMZ,MAAM;AASZ,MAAMa,KAAK,gBAAGrB,KAAK,CAACS,IAAI,CAAAa,GAAA,GAAC,SAASD,KAAKA,CAAC;EAAEE,OAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACpE,SAASC,WAAWA,CAACC,CAAC,EAAE;IACtB,MAAMC,MAAM,GAAGC,eAAe,CAACL,OAAO,CAAC,CAAC,CAAC;IACzC,IAAII,MAAM,IAAIJ,OAAO,CAACG,CAAC,CAAC,EAAE;MACxB;IACF;IACA,MAAMG,WAAW,GAAGN,OAAO,CAACO,KAAK,CAAC,CAAC;IACnC,IAAIR,OAAO,EAAE;MACXO,WAAW,CAACH,CAAC,CAAC,GAAG,GAAG;IACtB,CAAC,MAAM;MACLG,WAAW,CAACH,CAAC,CAAC,GAAG,GAAG;IACtB;IACAF,MAAM,CAACK,WAAW,CAAC;EACrB;EAEA,MAAMF,MAAM,GAAGC,eAAe,CAACL,OAAO,CAAC;EACvC,IAAIQ,MAAM;EACV,IAAIJ,MAAM,EAAE;IACV,MAAMK,YAAY,GAAG;MAAC,GAAGC;IAAS,CAAC,CAAC,CAAC;IACrC,IAAIN,MAAM,KAAK,GAAG,EAAE;MAClBK,YAAY,CAACE,KAAK,EAAE,CAAC,CAAC;IACxB,CAAC,MAAM;MACLF,YAAY,CAACG,KAAK,EAAE,CAAC,CAAC;IACxB;IACAC,WAAW,CAACJ,YAAY,CAAC,CAAC,CAAC;IAC3BD,MAAM,GAAGJ,MAAM,KAAK,GAAG,GAAE,MAAM,GAAG,MAAM;EAC1C,CAAC,MAAM;IACLI,MAAM,GAAGT,OAAO,GAAE,QAAQ,GAAG,QAAQ;EACvC;EAEA,oBACIlB,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAKQ,SAAS,EAAC,QAAQ;MAAAE,QAAA,EAAEiB;IAAM;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrCmB,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,QAAQ,kBACxCtC,OAAA;MAAoBQ,SAAS,EAAC,WAAW;MAAAE,QAAA,EACtCuB,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEE,QAAQ,KAAK;QAC/C,MAAMC,KAAK,GAAGF,QAAQ,GAAG,EAAE,GAAGC,QAAQ;QACtC,oBACIvC,OAAA,CAACG,MAAM;UAEHG,KAAK,EAAEa,OAAO,CAACqB,KAAK,CAAE;UACtBjC,aAAa,EAAEA,CAAA,KAAMc,WAAW,CAACmB,KAAK;QAAE,GAFnCA,KAAK;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGb,CAAC;MAER,CAAC;IAAC,GAVMwB,QAAQ;MAAA3B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWb,CACR,CAAC;EAAA,eACF,CAAC;AAET,CAAC,CAAC;;AAEF;AAAA2B,GAAA,GAnDMzB,KAAK;AAoDX,SAAS0B,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjD,QAAQ,CAAC,CAACqC,KAAK,CAAC,GAAG,CAAC,CAACa,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpD,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMsB,OAAO,GAAG6B,WAAW,GAAG,CAAC,KAAK,CAAC;EACrC,MAAME,cAAc,GAAGL,OAAO,CAACG,WAAW,CAAC;EAC3C,MAAM,CAAClB,QAAQ,EAAEG,WAAW,CAAC,GAAGpC,QAAQ,CAAC;IACvCkC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;EACA,SAASmB,UAAUA,CAACzB,WAAW,EAAE;IAC/B,MAAM0B,WAAW,GAAG,CAAC,GAAGP,OAAO,CAAClB,KAAK,CAAC,CAAC,EAAEqB,WAAW,GAAG,CAAC,CAAC,EAAEtB,WAAW,CAAC;IACvEoB,UAAU,CAACM,WAAW,CAAC;IACvBH,cAAc,CAACG,WAAW,CAAChB,MAAM,GAAG,CAAC,CAAC;EACxC;EAEA,SAASiB,MAAMA,CAACC,QAAQ,EAAE;IACxBL,cAAc,CAACK,QAAQ,CAAC;EAC1B;;EAEA;EACA,SAASC,MAAMA,CAAA,EAAG;IAChB,MAAM/B,MAAM,GAAGL,OAAO,GAAE,GAAG,GAAG,GAAG;IACjC,MAAMU,YAAY,GAAG;MAAC,GAAGC;IAAS,CAAC;IACnC,IAAIN,MAAM,KAAK,GAAG,EAAE;MAClBK,YAAY,CAACE,KAAK,EAAE;IACtB,CAAC,MAAM;MACLF,YAAY,CAACG,KAAK,EAAE;IACtB;IACAC,WAAW,CAACJ,YAAY,CAAC;IACzB2B,KAAK,CAAC,GAAGhC,MAAM,eAAe,CAAC;IAC/BsB,UAAU,CAAC,CAACZ,KAAK,CAAC,GAAG,CAAC,CAACa,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACnCE,cAAc,CAAC,CAAC,CAAC;EACnB;EAEA,OAAO;IACL9B,OAAO;IACP+B,cAAc;IACdC,UAAU;IACVE,MAAM;IACNR,OAAO;IACPG,WAAW;IACXlB,QAAQ;IACRyB;EACF,CAAC;AACH;;AAEA;AAAAX,EAAA,CAhDSD,YAAY;AAiDrB,eAAe,SAASc,IAAIA,CAAA,EAAG;EAAAC,GAAA;EAC7B,MAAM;IACJvC,OAAO;IACP+B,cAAc;IACdC,UAAU;IACVE,MAAM;IACNR,OAAO;IACPG,WAAW;IACXlB,QAAQ;IACRyB;EACF,CAAC,GAAGZ,YAAY,CAAC,CAAC;EAElB,MAAMgB,KAAK,GAAGd,OAAO,CAACR,GAAG,CAAC,CAACjB,OAAO,EAAEwC,IAAI,KAAK;IAC3C,IAAIC,WAAW;IACf,IAAID,IAAI,GAAG,CAAC,EAAE;MACZC,WAAW,GAAG,KAAK,GAAGD,IAAI,GAAG,GAAG;IAClC,CAAC,MAAM;MACLC,WAAW,GAAG,QAAQ;IACxB;IACA,oBACI5D,OAAA;MAAAU,QAAA,eACEV,OAAA;QAAQS,OAAO,EAAEA,CAAA,KAAM2C,MAAM,CAACO,IAAI,CAAE;QAAAjD,QAAA,EAAEkD;MAAW;QAAAjD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC,GADpD6C,IAAI;MAAAhD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CAAC;EAEX,CAAC,CAAC;EAEF,oBACId,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAE,QAAA,gBACnBV,OAAA;MAAKQ,SAAS,EAAC,wBAAwB;MAAAE,QAAA,eACrCV,OAAA;QAAMQ,SAAS,EAAE,GAAGU,OAAO,GAAE,YAAY,GAAG,YAAY,EAAG;QAAAR,QAAA,EAAEQ,OAAO,GAAE,OAAO,GAAG;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CAAC,eACNd,OAAA;MAAKQ,SAAS,EAAC,YAAY;MAAAE,QAAA,eACzBV,OAAA,CAACgB,KAAK;QAACE,OAAO,EAAEA,OAAQ;QAACC,OAAO,EAAE8B,cAAe;QAAC7B,MAAM,EAAE8B;MAAW;QAAAvC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACNd,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBV,OAAA;QAAQS,OAAO,EAAE6C,MAAO;QAACO,KAAK,EAAC,oEAAa;QAAAnD,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxDd,OAAA;QAAQS,OAAO,EAAEyC,UAAW;QAACW,KAAK,EAAC,gFAAe;QAAAnD,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChEd,OAAA;QAAQS,OAAO,EAAE2C,MAAO;QAACS,KAAK,EAAC,wDAAW;QAAAnD,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtDd,OAAA;QAAAU,QAAA,EAAKgD;MAAK;QAAA/C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBd,OAAA;QAAAU,QAAA,GAAK,4BAAM,EAACmB,QAAQ,CAACC,KAAK,EAAC,kCAAO,EAACD,QAAQ,CAACE,KAAK;MAAA;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;;AAEA;AAAA2C,GAAA,CA7CwBD,IAAI;EAAA,QAUtBd,YAAY;AAAA;AAAAoB,GAAA,GAVMN,IAAI;AA8C5B,SAAShC,eAAeA,CAACL,OAAO,EAAE;EAChC,MAAM4C,SAAS,GAAG,EAAE;EACpB;EACA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGD,SAAS,EAAEC,GAAG,EAAE,EAAE;IACxC,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIF,SAAS,GAAG,CAAC,EAAEE,GAAG,EAAE,EAAE;MAC7C,MAAMC,UAAU,GAAGF,GAAG,GAAGD,SAAS,GAAGE,GAAG;MACxC,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAI,CAACH,OAAO,CAAC+C,UAAU,GAAG5C,CAAC,CAAC,EAAE;UAC5B;QACF;QACA,IAAIA,CAAC,KAAK,CAAC,IAAIH,OAAO,CAAC+C,UAAU,CAAC,KAAK/C,OAAO,CAAC+C,UAAU,GAAG5C,CAAC,CAAC,EAAE;UAC9D,OAAOH,OAAO,CAAC+C,UAAU,CAAC;QAC5B;MACF;IACF;EACF;EACA;EACA,KAAK,IAAID,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,SAAS,EAAEE,GAAG,EAAE,EAAE;IACxC,KAAK,IAAID,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAID,SAAS,GAAG,CAAC,EAAEC,GAAG,EAAE,EAAE;MAC7C,MAAME,UAAU,GAAGF,GAAG,GAAGD,SAAS,GAAGE,GAAG;MACxC,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAI,CAACH,OAAO,CAAC+C,UAAU,GAAG5C,CAAC,GAAGyC,SAAS,CAAC,EAAE;UACxC;QACF;QACA,IAAIzC,CAAC,KAAK,CAAC,IAAIH,OAAO,CAAC+C,UAAU,CAAC,KAAK/C,OAAO,CAAC+C,UAAU,GAAG5C,CAAC,GAAGyC,SAAS,CAAC,EAAE;UAC1E,OAAO5C,OAAO,CAAC+C,UAAU,CAAC;QAC5B;MACF;IACF;EACF;EACA;EACA,KAAK,IAAIF,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAID,SAAS,GAAG,CAAC,EAAEC,GAAG,EAAE,EAAE;IAC7C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIF,SAAS,GAAG,CAAC,EAAEE,GAAG,EAAE,EAAE;MAC7C,MAAMC,UAAU,GAAGF,GAAG,GAAGD,SAAS,GAAGE,GAAG;MACxC,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAI,CAACH,OAAO,CAAC+C,UAAU,GAAG5C,CAAC,IAAIyC,SAAS,GAAG,CAAC,CAAC,CAAC,EAAE;UAC9C;QACF;QACA,IAAIzC,CAAC,KAAK,CAAC,IAAIH,OAAO,CAAC+C,UAAU,CAAC,KAAK/C,OAAO,CAAC+C,UAAU,GAAG5C,CAAC,IAAIyC,SAAS,GAAG,CAAC,CAAC,CAAC,EAAE;UAChF,OAAO5C,OAAO,CAAC+C,UAAU,CAAC;QAC5B;MACF;IACF;EACF;EACA;EACA,KAAK,IAAIF,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAID,SAAS,GAAG,CAAC,EAAEC,GAAG,EAAE,EAAE;IAC7C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,SAAS,EAAEE,GAAG,EAAE,EAAE;MACxC,MAAMC,UAAU,GAAGF,GAAG,GAAGD,SAAS,GAAGE,GAAG;MACxC,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,IAAI,CAACH,OAAO,CAAC+C,UAAU,GAAG5C,CAAC,IAAIyC,SAAS,GAAG,CAAC,CAAC,CAAC,EAAE;UAC9C;QACF;QACA,IAAIzC,CAAC,KAAK,CAAC,IAAIH,OAAO,CAAC+C,UAAU,CAAC,KAAK/C,OAAO,CAAC+C,UAAU,GAAG5C,CAAC,IAAIyC,SAAS,GAAG,CAAC,CAAC,CAAC,EAAE;UAChF,OAAO5C,OAAO,CAAC+C,UAAU,CAAC;QAC5B;MACF;IACF;EACF;EACA,OAAO,IAAI;AACb;AAEA,MAAMC,IAAI,GAAGtE,QAAQ,CAACuE,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACPvE,OAAA,CAACL,KAAK,CAAC6E,UAAU;EAAA9D,QAAA,gBACfV,OAAA,CAACF,YAAY;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAChBd,OAAA,CAACwD,IAAI;IAAA7C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACQ,CACtB,CAAC;AAAC,IAAAT,EAAA,EAAAU,GAAA,EAAAE,GAAA,EAAAwB,GAAA,EAAAqB,GAAA;AAAAW,YAAA,CAAApE,EAAA;AAAAoE,YAAA,CAAA1D,GAAA;AAAA0D,YAAA,CAAAxD,GAAA;AAAAwD,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAAX,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}