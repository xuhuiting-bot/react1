{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles.css';\n\n// 五子棋单个格子组件（Square），使用React.memo优化\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Square = /*#__PURE__*/React.memo(_c = function Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n});\n\n// 五子棋棋盘组件（Board），使用React.memo优化，避免不必要渲染\n_c2 = Square;\nconst Board = /*#__PURE__*/React.memo(_c3 = function Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = winner === 'X' ? '黑子获胜' : '白子获胜';\n  } else {\n    status = xIsNext ? '轮到黑子落子' : '轮到白子落子';\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), Array.from({\n      length: 15\n    }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: Array.from({\n        length: 15\n      }).map((_, colIndex) => {\n        const index = rowIndex * 15 + colIndex;\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[index],\n          onSquareClick: () => handleClick(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n});\n\n// 游戏主组件（Game）\n_c4 = Board;\nfunction Game() {\n  _s();\n  const [history, setHistory] = useState([Array(225).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  // 记忆化胜利判断结果的缓存对象\n  const winnerCache = {};\n\n  // 优化后的calculateWinner函数，添加记忆化机制\n  function calculateWinner(squares) {\n    const cacheKey = squares.join('');\n    if (winnerCache[cacheKey]) {\n      return winnerCache[cacheKey];\n    }\n    const boardSize = 15;\n    // 判断水平方向\n    for (let row = 0; row < boardSize; row++) {\n      for (let col = 0; col <= boardSize - 5; col++) {\n        const startIndex = row * boardSize + col;\n        for (let i = 0; i < 5; i++) {\n          if (!squares[startIndex + i]) {\n            break;\n          }\n          if (i === 4 && squares[startIndex] === squares[startIndex + i]) {\n            winnerCache[cacheKey] = squares[startIndex];\n            return squares[startIndex];\n          }\n        }\n      }\n    }\n    // 判断垂直方向\n    for (let col = 0; col < boardSize; col++) {\n      for (let row = 0; row <= boardSize - 5; row++) {\n        const startIndex = row * boardSize + col;\n        for (let i = 0; i < 5; i++) {\n          if (!squares[startIndex + i * boardSize]) {\n            break;\n          }\n          if (i === 4 && squares[startIndex] === squares[startIndex + i * boardSize]) {\n            winnerCache[cacheKey] = squares[startIndex];\n            return squares[startIndex];\n          }\n        }\n      }\n    }\n    // 判断正斜向（从左上角到右下角）\n    for (let row = 0; row <= boardSize - 5; row++) {\n      for (let col = 0; col <= boardSize - 5; col++) {\n        const startIndex = row * boardSize + col;\n        for (let i = 0; i < 5; i++) {\n          if (!squares[startIndex + i * (boardSize + 1)]) {\n            break;\n          }\n          if (i === 4 && squares[startIndex] === squares[startIndex + i * (boardSize + 1)]) {\n            winnerCache[cacheKey] = squares[startIndex];\n            return squares[startIndex];\n          }\n        }\n      }\n    }\n    // 判断反斜向（从右上角到左下角）\n    for (let row = 0; row <= boardSize - 5; row++) {\n      for (let col = 4; col < boardSize; col++) {\n        const startIndex = row * boardSize + col;\n        for (let i = 0; i < 5; i++) {\n          if (!squares[startIndex - i * (boardSize - 1)]) {\n            break;\n          }\n          if (i === 4 && squares[startIndex] === squares[startIndex - i * (boardSize - 1)]) {\n            winnerCache[cacheKey] = squares[startIndex];\n            return squares[startIndex];\n          }\n        }\n      }\n    }\n    winnerCache[cacheKey] = null;\n    return null;\n  }\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  // 悔棋功能函数\n  function undoMove() {\n    if (currentMove > 0) {\n      setCurrentMove(currentMove - 1);\n    }\n  }\n\n  // 重新开始游戏功能函数\n  function restartGame() {\n    setHistory([Array(225).fill(null)]);\n    setCurrentMove(0);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = '跳到第' + move + '步';\n    } else {\n      description = '回到游戏开始';\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartGame,\n        children: \"\\u91CD\\u65B0\\u5F00\\u59CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undoMove,\n        children: \"\\u6094\\u68CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 7\n  }, this);\n}\n_s(Game, \"ZVnBbFpY40QFsJgQhoJetEB8Org=\");\n_c5 = Game;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 192,\n  columnNumber: 5\n}, this));\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Square$React.memo\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board$React.memo\");\n$RefreshReg$(_c4, \"Board\");\n$RefreshReg$(_c5, \"Game\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","memo","_c","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Board","_c3","xIsNext","squares","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","status","Array","from","length","map","_","rowIndex","colIndex","index","_c4","Game","_s","history","setHistory","fill","currentMove","setCurrentMove","currentSquares","winnerCache","cacheKey","join","boardSize","row","col","startIndex","handlePlay","nextHistory","jumpTo","nextMove","undoMove","restartGame","moves","move","description","_c5","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["D:/桌面/react/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles.css';\n\n// 五子棋单个格子组件（Square），使用React.memo优化\nconst Square = React.memo(function Square({ value, onSquareClick }) {\n  return (\n      <button className=\"square\" onClick={onSquareClick}>\n        {value}\n      </button>\n  );\n});\n\n// 五子棋棋盘组件（Board），使用React.memo优化，避免不必要渲染\nconst Board = React.memo(function Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = winner === 'X'? '黑子获胜' : '白子获胜';\n  } else {\n    status = xIsNext? '轮到黑子落子' : '轮到白子落子';\n  }\n\n  return (\n      <>\n        <div className=\"status\">{status}</div>\n        {Array.from({ length: 15 }).map((_, rowIndex) => (\n            <div key={rowIndex} className=\"board-row\">\n              {Array.from({ length: 15 }).map((_, colIndex) => {\n                const index = rowIndex * 15 + colIndex;\n                return (\n                    <Square\n                        key={index}\n                        value={squares[index]}\n                        onSquareClick={() => handleClick(index)}\n                    />\n                );\n              })}\n            </div>\n        ))}\n      </>\n  );\n});\n\n// 游戏主组件（Game）\nfunction Game() {\n  const [history, setHistory] = useState([Array(225).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  // 记忆化胜利判断结果的缓存对象\n  const winnerCache = {};\n\n  // 优化后的calculateWinner函数，添加记忆化机制\n  function calculateWinner(squares) {\n    const cacheKey = squares.join('');\n    if (winnerCache[cacheKey]) {\n      return winnerCache[cacheKey];\n    }\n    const boardSize = 15;\n    // 判断水平方向\n    for (let row = 0; row < boardSize; row++) {\n      for (let col = 0; col <= boardSize - 5; col++) {\n        const startIndex = row * boardSize + col;\n        for (let i = 0; i < 5; i++) {\n          if (!squares[startIndex + i]) {\n            break;\n          }\n          if (i === 4 && squares[startIndex] === squares[startIndex + i]) {\n            winnerCache[cacheKey] = squares[startIndex];\n            return squares[startIndex];\n          }\n        }\n      }\n    }\n    // 判断垂直方向\n    for (let col = 0; col < boardSize; col++) {\n      for (let row = 0; row <= boardSize - 5; row++) {\n        const startIndex = row * boardSize + col;\n        for (let i = 0; i < 5; i++) {\n          if (!squares[startIndex + i * boardSize]) {\n            break;\n          }\n          if (i === 4 && squares[startIndex] === squares[startIndex + i * boardSize]) {\n            winnerCache[cacheKey] = squares[startIndex];\n            return squares[startIndex];\n          }\n        }\n      }\n    }\n    // 判断正斜向（从左上角到右下角）\n    for (let row = 0; row <= boardSize - 5; row++) {\n      for (let col = 0; col <= boardSize - 5; col++) {\n        const startIndex = row * boardSize + col;\n        for (let i = 0; i < 5; i++) {\n          if (!squares[startIndex + i * (boardSize + 1)]) {\n            break;\n          }\n          if (i === 4 && squares[startIndex] === squares[startIndex + i * (boardSize + 1)]) {\n            winnerCache[cacheKey] = squares[startIndex];\n            return squares[startIndex];\n          }\n        }\n      }\n    }\n    // 判断反斜向（从右上角到左下角）\n    for (let row = 0; row <= boardSize - 5; row++) {\n      for (let col = 4; col < boardSize; col++) {\n        const startIndex = row * boardSize + col;\n        for (let i = 0; i < 5; i++) {\n          if (!squares[startIndex - i * (boardSize - 1)]) {\n            break;\n          }\n          if (i === 4 && squares[startIndex] === squares[startIndex - i * (boardSize - 1)]) {\n            winnerCache[cacheKey] = squares[startIndex];\n            return squares[startIndex];\n          }\n        }\n      }\n    }\n    winnerCache[cacheKey] = null;\n    return null;\n  }\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  // 悔棋功能函数\n  function undoMove() {\n    if (currentMove > 0) {\n      setCurrentMove(currentMove - 1);\n    }\n  }\n\n  // 重新开始游戏功能函数\n  function restartGame() {\n    setHistory([Array(225).fill(null)]);\n    setCurrentMove(0);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = '跳到第' + move + '步';\n    } else {\n      description = '回到游戏开始';\n    }\n    return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        </li>\n    );\n  });\n\n  return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n        </div>\n        <div className=\"game-info\">\n          <button onClick={restartGame}>重新开始</button>\n          <button onClick={undoMove}>悔棋</button>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n      <Game />\n    </React.StrictMode>\n);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}